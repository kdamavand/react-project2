[{"C:\\Projects\\React\\project2\\src\\index.tsx":"1","C:\\Projects\\React\\project2\\src\\reportWebVitals.ts":"2","C:\\Projects\\React\\project2\\src\\App.tsx":"3","C:\\Projects\\React\\project2\\src\\routes\\Routes.tsx":"4","C:\\Projects\\React\\project2\\src\\view\\HomeView.tsx":"5","C:\\Projects\\React\\project2\\src\\components\\navigations\\desktopNavigation\\DesktopNavigation.tsx":"6","C:\\Projects\\React\\project2\\src\\routes\\RoutingPaths.ts":"7","C:\\Projects\\React\\project2\\src\\view\\LoginView.tsx":"8","C:\\Projects\\React\\project2\\src\\interfaces\\LoginCredentials.tsx":"9","C:\\Projects\\React\\project2\\src\\components\\Header.tsx":"10","C:\\Projects\\React\\project2\\src\\shared\\provider\\UserProvider.tsx":"11","C:\\Projects\\React\\project2\\src\\components\\profile\\Profile.tsx":"12","C:\\Projects\\React\\project2\\src\\components\\item\\Item.tsx":"13","C:\\Projects\\React\\project2\\src\\components\\item\\Item.styles.ts":"14","C:\\Projects\\React\\project2\\src\\App.styles.ts":"15"},{"size":357,"mtime":1612444758712,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":296,"mtime":1612444092466,"results":"20","hashOfConfig":"17"},{"size":903,"mtime":1612950229594,"results":"21","hashOfConfig":"17"},{"size":985,"mtime":1614781059149,"results":"22","hashOfConfig":"17"},{"size":371,"mtime":1611248807172,"results":"23","hashOfConfig":"19"},{"size":203,"mtime":1611600775065,"results":"24","hashOfConfig":"17"},{"size":2353,"mtime":1614849628176,"results":"25","hashOfConfig":"17"},{"size":82,"mtime":1611243572352,"results":"26","hashOfConfig":"19"},{"size":1148,"mtime":1612949863187,"results":"27","hashOfConfig":"17"},{"size":387,"mtime":1611586055641,"results":"28","hashOfConfig":"17"},{"size":823,"mtime":1612950319001,"results":"29","hashOfConfig":"17"},{"size":498,"mtime":1613296179075,"results":"30","hashOfConfig":"17"},{"size":481,"mtime":1612445176967,"results":"31","hashOfConfig":"17"},{"size":102,"mtime":1612950725823,"results":"32","hashOfConfig":"17"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"74s4pw",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1rz465x",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"C:\\Projects\\React\\project2\\src\\index.tsx",[],["72","73"],"C:\\Projects\\React\\project2\\src\\reportWebVitals.ts",[],["74","75"],"C:\\Projects\\React\\project2\\src\\App.tsx",[],"C:\\Projects\\React\\project2\\src\\routes\\Routes.tsx",["76","77","78"],"import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { HomeView } from \"../view/HomeView\";\r\nimport { LoginView } from \"../view/LoginView\";\r\nimport { useEffect, useContext } from \"react\";\r\nimport { UserContext } from \"./../shared/provider/UserProvider\";\r\nimport RoutingPath from \"./RoutingPaths\";\r\nexport const Routes = (props: { children: React.ReactChild }) => {\r\n  const [authUser, setAuthUser] = useContext(UserContext);\r\n  const { children } = props;\r\n\r\n  useEffect(() => {\r\n    setAuthUser({ userName: localStorage.getItem(\"user\") });\r\n  }, []);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      {children}\r\n      <Switch>\r\n        <Route exact path={RoutingPath.homePath} component={HomeView} />\r\n        <Route exact path={RoutingPath.loginPath} component={LoginView} />\r\n        <Route component={HomeView} />\r\n        // startsidan\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","C:\\Projects\\React\\project2\\src\\view\\HomeView.tsx",[],"C:\\Projects\\React\\project2\\src\\components\\navigations\\desktopNavigation\\DesktopNavigation.tsx",["79","80"],"C:\\Projects\\React\\project2\\src\\routes\\RoutingPaths.ts",["81"],"const homePath = '/home';\r\nconst aboutPath = '/about';\r\nconst loginPath = '/login';\r\nconst contactPath = '/contact';\r\n\r\nexport default {\r\n    homePath,\r\n    aboutPath,\r\n    loginPath,\r\n    contactPath\r\n}","C:\\Projects\\React\\project2\\src\\view\\LoginView.tsx",["82"],"import { useState, useContext } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { UserContext } from \"../shared/provider/UserProvider\";\r\nimport { LoginCredentials } from \"./../interfaces/LoginCredentials\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RoutingPath from \"./../routes/RoutingPaths\";\r\n\r\nexport type UserType = {\r\n  id: number;\r\n  username: string;\r\n  password: string;\r\n  age: number;\r\n};\r\n\r\n//export const GetProducts = async (): Promise<CartItemType[]> =>\r\n//  await (await fetch(\"https://fakestoreapi.com/products\")).json();\r\nexport const GetUsers = async (): Promise<UserType[]> =>\r\n  await (await fetch(\"http://localhost:8080/api/users\")).json();\r\n\r\nexport const LoginView = () => {\r\n  const { data } = useQuery<UserType[]>(\"users\", GetUsers);\r\n  const history = useHistory();\r\n  const [authUser, setAuthUser] = useContext(UserContext);\r\n  const [loginCredentials, setLoginCredentials] = useState<LoginCredentials>({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const login = () => {\r\n    const user = data?.find(user => (user.username === loginCredentials.username && user.password ===loginCredentials.password) )\r\n    if(user){\r\n      localStorage.setItem(\"user\", loginCredentials.username);\r\n      setAuthUser(loginCredentials);\r\n      history.push(RoutingPath.homePath);\r\n    }else{\r\n      console.log(\"user not found\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>{loginCredentials.username}</h1>\r\n      <form className=\"add-form\">\r\n        <div className=\"form-control\">\r\n          <label>username:</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(event) =>\r\n              setLoginCredentials({\r\n                ...loginCredentials,\r\n                username: event.target.value,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label>password:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"password\"\r\n            required\r\n            onChange={(event) =>\r\n              setLoginCredentials({\r\n                ...loginCredentials,\r\n                password: event.target.value,\r\n              })\r\n            }\r\n          />\r\n          <button className=\"btn\" onClick={() => login()}>\r\n            Login\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Projects\\React\\project2\\src\\interfaces\\LoginCredentials.tsx",[],["83","84"],"C:\\Projects\\React\\project2\\src\\components\\Header.tsx",["85","86","87","88"],"import Logotype from \"./../shared/images/logo.svg\";\r\nimport { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"./../shared/provider/UserProvider\";\r\nimport { Profile } from \"./../components/profile/Profile\";\r\nimport RoutingPath from \"./../routes/RoutingPaths\";\r\n\r\n// Types\r\nimport { CartItemType } from \"../view/HomeView\";\r\n\r\nexport const Header = () => {\r\n  const history = useHistory();\r\n  const [authUser, setAuthUser] = useContext(UserContext);\r\n  const getTotalItems = (items: CartItemType[]) =>\r\n    items.reduce((ack: number, item) => ack + item.amount, 0);\r\n  const display = () => {\r\n    return authUser?.username ? (\r\n      <Profile />\r\n    ) : (\r\n      <a onClick={() => history.push(RoutingPath.loginPath)}>Login</a>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <img className=\"logo\" src={Logotype} alt={\"\"} />\r\n        <div className=\"topnav\">\r\n          <a className=\"active\" onClick={() => history.push(\"/home\")}>\r\n            Home\r\n          </a>\r\n          {display()}\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"left\"></div>\r\n    </>\r\n  );\r\n};\r\n","C:\\Projects\\React\\project2\\src\\shared\\provider\\UserProvider.tsx",[],"C:\\Projects\\React\\project2\\src\\components\\profile\\Profile.tsx",["89","90"],"import { useContext } from \"react\";\r\nimport { UserContext } from \"../../shared/provider/UserProvider\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RoutingPaths from \"../../routes/RoutingPaths\";\r\n\r\n\r\nexport const Profile = () => {\r\n  const [authUser, setAuthUser] = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  const logout = () => {\r\n    setAuthUser(false);\r\n    history.push(RoutingPaths.homePath);\r\n  };\r\n  return (\r\n    <div className='profile'>\r\n      <a>\r\n      <img\r\n        className=\"img-profile\"\r\n        src=\"https:/thispersondoesnotexist.com/image\"\r\n        title={authUser.username}\r\n      ></img>\r\n      {authUser.username === \"\" ? (\r\n        authUser.username\r\n      ) : (\r\n  \r\n          <span onClick={() => logout()}>Logout</span>\r\n \r\n      )}\r\n    </a>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Projects\\React\\project2\\src\\components\\item\\Item.tsx",[],"C:\\Projects\\React\\project2\\src\\components\\item\\Item.styles.ts",[],["91","92"],"C:\\Projects\\React\\project2\\src\\App.styles.ts",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"97"},{"ruleId":"95","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":8,"column":10,"nodeType":"101","messageId":"102","endLine":8,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":13,"column":6,"nodeType":"105","endLine":13,"endColumn":8,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":21,"column":39,"nodeType":"109","endLine":23,"endColumn":7},{"ruleId":"99","severity":1,"message":"110","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":16},{"ruleId":"99","severity":1,"message":"111","line":5,"column":11,"nodeType":"101","messageId":"102","endLine":5,"endColumn":18},{"ruleId":"112","severity":1,"message":"113","line":6,"column":1,"nodeType":"114","endLine":11,"endColumn":2},{"ruleId":"99","severity":1,"message":"100","line":23,"column":10,"nodeType":"101","messageId":"102","endLine":23,"endColumn":18},{"ruleId":"93","replacedBy":"115"},{"ruleId":"95","replacedBy":"116"},{"ruleId":"99","severity":1,"message":"117","line":13,"column":20,"nodeType":"101","messageId":"102","endLine":13,"endColumn":31},{"ruleId":"99","severity":1,"message":"118","line":14,"column":9,"nodeType":"101","messageId":"102","endLine":14,"endColumn":22},{"ruleId":"119","severity":1,"message":"120","line":20,"column":7,"nodeType":"121","endLine":20,"endColumn":62},{"ruleId":"119","severity":1,"message":"120","line":29,"column":11,"nodeType":"121","endLine":29,"endColumn":71},{"ruleId":"119","severity":1,"message":"120","line":17,"column":7,"nodeType":"121","endLine":17,"endColumn":10},{"ruleId":"122","severity":1,"message":"123","line":18,"column":7,"nodeType":"121","endLine":22,"endColumn":8},{"ruleId":"93","replacedBy":"124"},{"ruleId":"95","replacedBy":"125"},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],["126"],["127"],"@typescript-eslint/no-unused-vars","'authUser' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAuthUser'. Either include it or remove the dependency array.","ArrayExpression",["128"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","'Logotype' is defined but never used.","'history' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["126"],["127"],"'setAuthUser' is assigned a value but never used.","'getTotalItems' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["126"],["127"],"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},"Update the dependencies array to be: [setAuthUser]",{"range":"131","text":"132"},[566,568],"[setAuthUser]"]